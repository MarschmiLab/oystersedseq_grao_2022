track <- cbind(out, sapply(dadaFs, getN), sapply(dadaRs, getN), sapply(mergers, getN), rowSums(seqtab.nochim))
colnames(track) <- c("input", "filtered", "denoisedF", "denoisedR", "merged", "nonchim")
rownames(track) <- sample.names
head(track)
taxa <- assignTaxonomy(seqtab.nochim, "~/Documents/git_repos/oysterbedseq_grao_2022/DADA2_tutorial/MiSeq_SOP/silva_nr_v132_train_set.fa")
taxa.print <- taxa
rownames(taxa.print) <- NULL
head(taxa.print)
unqs.mock <- seqtab.nochim["Mock",]
unqs.mock <- sort(unqs.mock[unqs.mock>0], decreasing = TRUE)
cat("DADA2 inferred", length(unqs.mock), "sample siquences present in the mock community.\n")
mock.ref <- getSequences(file.path(path, "HMP_MOCK.v35.fasta"))
match.ref <- sum(sapply(names(unqs.mock), function(x) any(grepl(x, mock.ref))))
cat("Of those,", sum(match.ref), "were exact matches to the expected reference sequences.\n")
install.packages("phyloseq")
library(phyloseq); packageVersion("phyloseq")
library(Biostrings); packageVersion("Biostrings")
library(ggplot2); packageVersion("ggplot2")
theme_set(theme_bw())
samples.out <- rownames(seqtab.nochim)
subject <- sapply(strsplit(samples.out, "D"), `[`, 1)
gender <- substr(subject,1,1)
subject <- substr(subject,2,999)
day <- as.integer(sapply(strsplit(samples.out, "D"), `[`, 2))
samdf <- data.frame(Subject=subject, Gender=gender, Day=day)
samdf$When <- "Early"
samdf$When[samdf$Day>100] <- "Late"
rownames(samdf) <- samples.out
ps <- phyloseq(otu_table(seqtab.nochim, taxa_are_rows=FALSE),
sample_data(samdf),
tax_table(taxa))
ps <- prune_samples(sample_names(ps) != "Mock", ps)
dna <- Biostrings::DNAStringSet(taxa_names(ps))
names(dna) <- taxa_names(ps)
ps <- merge_phyloseq(ps, dna)
taxa_names(ps) <- paste0("ASV", seq(ntaxa(ps)))
ps
plot_richness(ps, x="Day", measures = c("Shannon", "Simpson"), color = "When")
plot_richness(ps, x="Day", measures = c("Shannon", "Simpson"), color = "When")
#ordinate
ps.prop <- transform_sample_counts(ps, function(otu) otu/sum(otu))
ord.nmds.bray <- ordinate(ps.prop, method = "NMDS", distance = "bray")
plot_richness(ps, x="Day", measures = c("Shannon", "Simpson"), color = "When")
#ordinate
ps.prop <- transform_sample_counts(ps, function(otu) otu/sum(otu))
ord.nmds.bray <- ordinate(ps.prop, method = "NMDS", distance = "bray")
plot_ordination(ps.prop, ord.nmds.bray, color = "When", title = "Bray NMDS")
plot_richness(ps, x="Day", measures = c("Shannon", "Simpson"), color = "When")
#ordination
ps.prop <- transform_sample_counts(ps, function(otu) otu/sum(otu))
ord.nmds.bray <- ordinate(ps.prop, method = "NMDS", distance = "bray")
plot_ordination(ps.prop, ord.nmds.bray, color = "When", title = "Bray NMDS")
#bar plot
top20 <- names(sort(taxa_sums(ps), decreasing = TRUE))[1:20]
ps.top20 <- transform_sample_counts(ps, function(OTU) OTU/sum(OTU))
ps.top20 <- prune_taxa(top20, ps.top20)
plot_bar(ps.top20, x="Day", fill = "Family") + facet_wrap(~When, scales = "free_x")
library("tidyr")
library("dplyr")
official_data <- read.csv("updated_oip.csv", stringsAsFactors = TRUE)
library("tidyr")
library("dplyr")
official_data <- read.csv("updated_oip.csv", stringsAsFactors = TRUE)
#seasons according to the northern hemisphere:
#spring: March 1 - May 31
#summer: June 1 - August 31
#fall: September 1 - November 30
#winter: December 1 - February 28/29
#https://www.timeanddate.com/calendar/aboutseasons.html
View(updated_data)
View(official_data)
library("tidyr")
library("dplyr")
official_data <- read.csv("updated_oip.csv", stringsAsFactors = TRUE)
#seasons according to the northern hemisphere:
#spring: March 1 - May 31
#summer: June 1 - August 31
#fall: September 1 - November 30
#winter: December 1 - February 28/29
#https://www.timeanddate.com/calendar/aboutseasons.html
View(official_data)
official_data <- read.csv("updated_oip.csv", stringsAsFactors = TRUE)
#seasons according to the northern hemisphere:
#spring: March 1 - May 31
#summer: June 1 - August 31
#fall: September 1 - November 30
#winter: December 1 - February 28/29
#https://www.timeanddate.com/calendar/aboutseasons.html
library("tidyr")
library("dplyr")
official_data <- read.csv("updated_oip.csv", stringsAsFactors = TRUE)
#seasons according to the northern hemisphere:
#spring: March 1 - May 31
#summer: June 1 - August 31
#fall: September 1 - November 30
#winter: December 1 - February 28/29
#https://www.timeanddate.com/calendar/aboutseasons.html
library("tidyr")
library("dplyr")
official_data <- read.csv("updated_oip.csv", stringsAsFactors = TRUE)
#seasons according to the northern hemisphere:
#spring: March 1 - May 31
#summer: June 1 - August 31
#fall: September 1 - November 30
#winter: December 1 - February 28/29
#https://www.timeanddate.com/calendar/aboutseasons.html
View(official_data)
library("tidyr")
library("dplyr")
library("ggplot2")
library("extrafont")
font_import()
loadfonts(device = "all")
sediment_data <- read.csv("updated_oip copy.csv", stringsAsFactors = TRUE)
#seasons according to the northern hemisphere:
#spring: March 1 - May 31
#summer: June 1 - August 31
#fall: September 1 - November 30
#winter: December 1 - February 28/29
#https://www.timeanddate.com/calendar/aboutseasons.html
DNA <- sediment_data$DNA.Concentration.ng.uL
DNA
elution <- sediment_data$Elution.uL
mass <- sediment_data$Soil.mass.ext_grams
normalizeData <- DNA * elution * (1/mass)
normalizeData
DNA <- sediment_data$DNA.Concentration.ng.uL
elution <- sediment_data$Elution.uL
normalizeData <- DNA * elution * (1/mass)
normalizeData
sediment_data %>%
select(DNA.Concentration.ng.uL, Elution.uL, Soil.mass.ext_grams) %>%
mutate(
#DNA <- sediment_data$DNA.Concentration.ng.uL,
#mass <- sediment_data$Soil.mass.ext_grams,
#elution <- sediment_data$Elution.uL,
NormalizedData <- (sediment_data$DNA.Concentration.ng.uL) * (sediment_data$Elution.uL) * (1/sediment_data$Soil.mass.ext_grams)
)
#normalizeData
sediment_data
## add to an object so that data frame updates
#change grams to micrograms
sediment_data %>%
select(DNA.Concentration.ng.uL, Elution.uL, Soil.mass.ext_grams) %>%
mutate(
#DNA <- sediment_data$DNA.Concentration.ng.uL,
mass <- (sediment_data$Soil.mass.ext_grams/1000000),
#elution <- sediment_data$Elution.uL,
NormalizedData <- (sediment_data$DNA.Concentration.ng.uL) * (sediment_data$Elution.uL) * (1/mass)
)
#normalizeData
## add to an object so that data frame updates
#change grams to micrograms
sediment_data %>%
select(DNA.Concentration.ng.uL, Elution.uL, Soil.mass.ext_grams) %>%
mutate(
#DNA <- sediment_data$DNA.Concentration.ng.uL,
mass <- (sediment_data$Soil.mass.ext_grams * 1000000),
#elution <- sediment_data$Elution.uL,
NormalizedData <- (sediment_data$DNA.Concentration.ng.uL) * (sediment_data$Elution.uL) * (1/mass)
)
#normalizeData
## add to an object so that data frame updates
#change grams to micrograms
sediment_data %>%
select(DNA.Concentration.ng.uL, Elution.uL, Soil.mass.ext_grams) %>%
mutate(
#DNA <- sediment_data$DNA.Concentration.ng.uL,
#mass <- (sediment_data$Soil.mass.ext_grams * 1000000),
#elution <- sediment_data$Elution.uL,
NormalizedData <- (sediment_data$DNA.Concentration.ng.uL) * (sediment_data$Elution.uL) * (1/sediment_data$Soil.mass.ext_grams * 1000000)
)
#normalizeData
## add to an object so that data frame updates
#change grams to micrograms
sediment_data %>%
select(DNA.Concentration.ng.uL, Elution.uL, Soil.mass.ext_grams) %>%
mutate(
#DNA <- sediment_data$DNA.Concentration.ng.uL,
#mass <- (sediment_data$Soil.mass.ext_grams * 1000000),
#elution <- sediment_data$Elution.uL,
NormalizedData <- (sediment_data$DNA.Concentration.ng.uL) * (sediment_data$Elution.uL) * (1/(sediment_data$Soil.mass.ext_grams * 1000000))
)
#normalizeData
## add to an object so that data frame updates
#change grams to micrograms
sediment_data %>%
select(DNA.Concentration.ng.uL, Elution.uL, Soil.mass.ext_grams) %>%
mutate(
#DNA <- sediment_data$DNA.Concentration.ng.uL,
#mass <- (sediment_data$Soil.mass.ext_grams * 1000000),
#elution <- sediment_data$Elution.uL,
NormalizedData <- (sediment_data$DNA.Concentration.ng.uL) * (sediment_data$Elution.uL) * (1/(sediment_data$Soil.mass.ext_grams))
)
#normalizeData
## add to an object so that data frame updates
#change grams to
#micrograms = 1000000
#nanograms = 1000000000
sediment_data %>%
select(DNA.Concentration.ng.uL, Elution.uL, Soil.mass.ext_grams) %>%
mutate(
#DNA <- sediment_data$DNA.Concentration.ng.uL,
#mass <- (sediment_data$Soil.mass.ext_grams * 1000000),
#elution <- sediment_data$Elution.uL,
NormalizedData <- (sediment_data$DNA.Concentration.ng.uL) * (sediment_data$Elution.uL) * (1/(sediment_data$Soil.mass.ext_grams*1000000))
)
#normalizeData
## add to an object so that data frame updates
#change grams to
#micrograms = 1000000
#nanograms = 1000000000
sediment_data %>%
select(DNA.Concentration.ng.uL, Elution.uL, Soil.mass.ext_grams) %>%
mutate(
#DNA <- sediment_data$DNA.Concentration.ng.uL,
#mass <- (sediment_data$Soil.mass.ext_grams * 1000000),
#elution <- sediment_data$Elution.uL,
NormalizedData <- (sediment_data$DNA.Concentration.ng.uL) * (sediment_data$Elution.uL) * (1/(sediment_data$Soil.mass.ext_grams*1000000000))
)
#normalizeData
setwd("~/Documents/git_repos/oystersedseq_grao_2022/data")
## add to an object so that data frame updates
#change grams to
#micrograms = 1000000
#nanograms = 1000000000
#microliters =
Normalized_Values <- sediment_data %>%
select(DNA.Concentration.ng.uL, Elution.uL, Soil.mass.ext_grams) %>%
mutate(
#DNA <- sediment_data$DNA.Concentration.ng.uL,
#mass <- (sediment_data$Soil.mass.ext_grams * 1000000),
#elution <- sediment_data$Elution.uL,
NormalizedData <- (sediment_data$DNA.Concentration.ng.uL) * (sediment_data$Elution.uL) * (1/(sediment_data$Soil.mass.ext_grams))
)
#normalizeData
## add to an object so that data frame updates
#change grams to
#micrograms = 1000000
#nanograms = 1000000000
#microliters =
Normalized_Values <- sediment_data %>%
select(DNA.Concentration.ng.uL, Elution.uL, Soil.mass.ext_grams) %>%
mutate(
#DNA <- sediment_data$DNA.Concentration.ng.uL,
#mass <- (sediment_data$Soil.mass.ext_grams * 1000000),
#elution <- sediment_data$Elution.uL,
NormalizedData <- (sediment_data$DNA.Concentration.ng.uL) * (sediment_data$Elution.uL) * (1/(sediment_data$Soil.mass.ext_grams))
)
#normalizeData
dnaconc <- ggplot(data = sediment_data, mapping = aes(x = Location, y = DNA.Concentration.ng.uL)) + geom_point(mapping = aes(color=Treatment, shape = Treatment), position = position_jitterdodge()) + scale_color_manual(values = c("lightskyblue2", "plum3")) + geom_boxplot(alpha = 0.3, mapping = aes(color=Treatment), outlier.shape =  NA) + scale_y_continuous(breaks = seq(from=0, to= 40, by= 5), labels = seq(from=0, to=40, by=5)) + labs(
x = "Location",
y = "DNA Concentration (ng/uL)",
title = "DNA Concentration in Oyster and Bare Sediment Samples Across Locations",
color = "Treatment"
) + theme(plot.title=element_text(hjust=0.5), panel.background = element_rect(fill = "ivory2"), text = element_text(family = "Times New Roman", size=12))
dnaconc
#axis.text.x = element_text(angle = 90, hjust = 1)
ggsave(filename = "DNAConcentration.png", plot = dnaconc, width = 22, height = 12, dpi = 300, units = "cm")
View(Normalized_Values)
## add to an object so that data frame updates
#change grams to
#micrograms = 1000000
#nanograms = 1000000000
#microliters =
sediment_data %>%
select(DNA.Concentration.ng.uL, Elution.uL, Soil.mass.ext_grams) %>%
mutate(
#DNA <- sediment_data$DNA.Concentration.ng.uL,
#mass <- (sediment_data$Soil.mass.ext_grams * 1000000),
#elution <- sediment_data$Elution.uL,
NormalizedData <- (sediment_data$DNA.Concentration.ng.uL) * (sediment_data$Elution.uL) * (1/(sediment_data$Soil.mass.ext_grams))
)
#normalizeData
## add to an object so that data frame updates
#change grams to
#micrograms = 1000000
#nanograms = 1000000000
#microliters =
#sediment_data %>%
# select(DNA.Concentration.ng.uL, Elution.uL, Soil.mass.ext_grams) %>%
# mutate(
#DNA <- sediment_data$DNA.Concentration.ng.uL,
#mass <- (sediment_data$Soil.mass.ext_grams * 1000000),
#elution <- sediment_data$Elution.uL,
#  NormalizedData <- (sediment_data$DNA.Concentration.ng.uL) * (sediment_data$Elution.uL) * (1/(sediment_data$Soil.mass.ext_grams))
#  )
sediment_data_new <- mutate(
sediment_data, Normalized.Values = sediment_data$DNA.Concentration.ng.uL * sediment_data$Elution.uL * (1/sediment_data$Soil.mass.ext_grams)
)
print(sediment_data_new)
#normalizeData
## add to an object so that data frame updates
#change grams to
#micrograms = 1000000
#nanograms = 1000000000
#microliters =
#sediment_data %>%
# select(DNA.Concentration.ng.uL, Elution.uL, Soil.mass.ext_grams) %>%
# mutate(
#DNA <- sediment_data$DNA.Concentration.ng.uL,
#mass <- (sediment_data$Soil.mass.ext_grams * 1000000),
#elution <- sediment_data$Elution.uL,
#  NormalizedData <- (sediment_data$DNA.Concentration.ng.uL) * (sediment_data$Elution.uL) * (1/(sediment_data$Soil.mass.ext_grams))
#  )
sediment_data_new <- mutate(
sediment_data, Normalized.Values = sediment_data$DNA.Concentration.ng.uL * sediment_data$Elution.uL * (1/sediment_data$Soil.mass.ext_grams*1000000)
)
print(sediment_data_new)
#normalizeData
## add to an object so that data frame updates
#change grams to
#micrograms = 1000000
#nanograms = 1000000000
#microliters =
#sediment_data %>%
# select(DNA.Concentration.ng.uL, Elution.uL, Soil.mass.ext_grams) %>%
# mutate(
#DNA <- sediment_data$DNA.Concentration.ng.uL,
#mass <- (sediment_data$Soil.mass.ext_grams * 1000000),
#elution <- sediment_data$Elution.uL,
#  NormalizedData <- (sediment_data$DNA.Concentration.ng.uL) * (sediment_data$Elution.uL) * (1/(sediment_data$Soil.mass.ext_grams))
#  )
sediment_data_new <- mutate(
sediment_data, Normalized.Values = sediment_data$DNA.Concentration.ng.uL * sediment_data$Elution.uL * (1/sediment_data$Soil.mass.ext_grams*1000000000)
)
print(sediment_data_new)
#normalizeData
## add to an object so that data frame updates
#change grams to
#micrograms = 1000000
#nanograms = 1000000000
#microliters =
#sediment_data %>%
# select(DNA.Concentration.ng.uL, Elution.uL, Soil.mass.ext_grams) %>%
# mutate(
#DNA <- sediment_data$DNA.Concentration.ng.uL,
#mass <- (sediment_data$Soil.mass.ext_grams * 1000000),
#elution <- sediment_data$Elution.uL,
#  NormalizedData <- (sediment_data$DNA.Concentration.ng.uL) * (sediment_data$Elution.uL) * (1/(sediment_data$Soil.mass.ext_grams))
#  )
sediment_data_new <- mutate(
sediment_data, Normalized.Values = sediment_data$DNA.Concentration.ng.uL * sediment_data$Elution.uL * (1/sediment_data$Soil.mass.ext_grams)
)
print(sediment_data_new)
#normalizeData
dnaconc <- ggplot(data = sediment_data_new, mapping = aes(x = Location, y = Normalized.Values)) + geom_point(mapping = aes(color=Treatment, shape = Treatment), position = position_jitterdodge()) + scale_color_manual(values = c("lightskyblue2", "plum3")) + geom_boxplot(alpha = 0.3, mapping = aes(color=Treatment), outlier.shape =  NA) + scale_y_continuous(breaks = seq(from=0, to= 40, by= 5), labels = seq(from=0, to=40, by=5)) + labs(
x = "Location",
y = "DNA Concentration (ng/uL)",
title = "DNA Concentration in Oyster and Bare Sediment Samples Across Locations",
color = "Treatment"
) + theme(plot.title=element_text(hjust=0.5), panel.background = element_rect(fill = "ivory2"), text = element_text(family = "Times New Roman", size=12))
dnaconc
#axis.text.x = element_text(angle = 90, hjust = 1)
#ggsave(filename = "DNAConcentration.png", plot = dnaconc, width = 22, height = 12, dpi = 300, units = "cm")
dnaconc <- ggplot(data = sediment_data_new, mapping = aes(x = Location, y = Normalized.Values)) + geom_point(mapping = aes(color=Treatment, shape = Treatment), position = position_jitterdodge()) + scale_color_manual(values = c("lightskyblue2", "plum3")) + geom_boxplot(alpha = 0.3, mapping = aes(color=Treatment), outlier.shape =  NA) + scale_y_continuous(breaks = seq(from=0, to= 40, by= 5), labels = seq(from=0, to=40, by=5)) + labs(
x = "Location",
y = "DNA Concentration (ng/uL)",
title = "DNA Concentration in Oyster and Bare Sediment Samples Across Locations",
color = "Treatment"
) + theme(plot.title=element_text(hjust=0.5), panel.background = element_rect(fill = "ivory2"), text = element_text(family = "Times New Roman", size=12))
dnaconc
#axis.text.x = element_text(angle = 90, hjust = 1)
#ggsave(filename = "DNAConcentration.png", plot = dnaconc, width = 22, height = 12, dpi = 300, units = "cm")
dnaconc <- ggplot(data = sediment_data_new, mapping = aes(x = Location, y = Normalized.Values)) + geom_point(mapping = aes(color=Treatment, shape = Treatment), position = position_jitterdodge()) + scale_color_manual(values = c("lightskyblue2", "plum3")) + geom_boxplot(alpha = 0.3, mapping = aes(color=Treatment), outlier.shape =  NA)  + labs(
x = "Location",
y = "DNA Concentration (ng/uL)",
title = "DNA Concentration in Oyster and Bare Sediment Samples Across Locations",
color = "Treatment"
) + theme(plot.title=element_text(hjust=0.5), panel.background = element_rect(fill = "ivory2"), text = element_text(family = "Times New Roman", size=12))
dnaconc
#+ scale_y_continuous(breaks = seq(from=0, to= 40, by= 5), labels = seq(from=0, to=40, by=5))
#axis.text.x = element_text(angle = 90, hjust = 1)
#ggsave(filename = "DNAConcentration.png", plot = dnaconc, width = 22, height = 12, dpi = 300, units = "cm")
dnaconc <- ggplot(data = sediment_data_new, mapping = aes(x = Location, y = Normalized.Values)) + geom_point(mapping = aes(color=Treatment, shape = Treatment), position = position_jitterdodge()) + scale_color_manual(values = c("lightskyblue2", "plum3")) + geom_boxplot(alpha = 0.3, mapping = aes(color=Treatment), outlier.shape =  NA)  + labs(
x = "Location",
y = "DNA Concentration (ng DNA / 1 g sediment)",
title = "DNA Concentration in Oyster and Bare Sediment Samples Across Locations",
color = "Treatment"
) + theme(plot.title=element_text(hjust=0.5), panel.background = element_rect(fill = "ivory2"), text = element_text(family = "Times New Roman", size=12))
dnaconc
#+ scale_y_continuous(breaks = seq(from=0, to= 40, by= 5), labels = seq(from=0, to=40, by=5))
#axis.text.x = element_text(angle = 90, hjust = 1)
#ggsave(filename = "DNAConcentration.png", plot = dnaconc, width = 22, height = 12, dpi = 300, units = "cm")
dnaconc <- ggplot(data = sediment_data_new, mapping = aes(x = Location, y = Normalized.Values)) + geom_point(mapping = aes(color=Treatment, shape = Treatment), position = position_jitterdodge()) + scale_color_manual(values = c("lightskyblue2", "plum3")) + geom_boxplot(alpha = 0.3, mapping = aes(color=Treatment), outlier.shape =  NA)  + labs(
x = "Location",
y = "DNA Concentration (ng DNA / 1 g sediment)",
title = "DNA Concentration in Oyster and Bare Sediment Samples Across Locations",
color = "Treatment"
) + theme(plot.title=element_text(hjust=0.5), panel.background = element_rect(fill = "ivory2"), text = element_text(family = "Times New Roman", size=12))
dnaconc
#+ scale_y_continuous(breaks = seq(from=0, to= 40, by= 5), labels = seq(from=0, to=40, by=5))
#axis.text.x = element_text(angle = 90, hjust = 1)
ggsave(filename = "DNAConcentrationNormalized.png", plot = dnaconc, width = 22, height = 12, dpi = 300, units = "cm")
dnaconc <- ggplot(data = sediment_data_new, mapping = aes(x = Location, y = Normalized.Values)) + geom_point(mapping = aes(color=Treatment, shape = Treatment), position = position_jitterdodge()) + scale_color_manual(values = c("lightskyblue2", "plum3")) + geom_boxplot(alpha = 0.3, mapping = aes(color=Treatment), outlier.shape =  NA)  + labs(
x = "Location",
y = "DNA Concentration (ng DNA/g sediment)",
title = "DNA Concentration in Oyster and Bare Sediment Samples Across Locations",
color = "Treatment"
) + theme(plot.title=element_text(hjust=0.5), panel.background = element_rect(fill = "ivory2"), text = element_text(family = "Times New Roman", size=12))
dnaconc
#+ scale_y_continuous(breaks = seq(from=0, to= 40, by= 5), labels = seq(from=0, to=40, by=5))
#axis.text.x = element_text(angle = 90, hjust = 1)
ggsave(filename = "DNAConcentrationNormalized.png", plot = dnaconc, width = 22, height = 12, dpi = 300, units = "cm")
dnaconc <- ggplot(data = sediment_data_new, mapping = aes(x = Location, y = Normalized.Values)) + geom_point(mapping = aes(color=Treatment, shape = Treatment), position = position_jitterdodge()) + scale_color_manual(values = c("lightskyblue2", "plum3")) + geom_boxplot(alpha = 0.3, mapping = aes(color=Treatment), outlier.shape =  NA)  + labs(
x = "Location",
y = "DNA Concentration (ng DNA / g sediment)",
title = "DNA Concentration in Oyster and Bare Sediment Samples Across Locations",
color = "Treatment"
) + theme(plot.title=element_text(hjust=0.5), panel.background = element_rect(fill = "ivory2"), text = element_text(family = "Times New Roman", size=12))
dnaconc
#+ scale_y_continuous(breaks = seq(from=0, to= 40, by= 5), labels = seq(from=0, to=40, by=5))
#axis.text.x = element_text(angle = 90, hjust = 1)
ggsave(filename = "DNAConcentrationNormalized.png", plot = dnaconc, width = 22, height = 12, dpi = 300, units = "cm")
dnaconc <- ggplot(data = sediment_data_new, mapping = aes(x = Location, y = Normalized.Values)) + geom_point(mapping = aes(color=Treatment, shape = Treatment), position = position_jitterdodge()) + scale_color_manual(values = c("lightskyblue2", "plum3")) + geom_boxplot(alpha = 0.3, mapping = aes(color=Treatment), outlier.shape =  NA)  + labs(
x = "Location",
y = "DNA Concentration (ng DNA / g sediment)",
title = "DNA Concentration in Oyster and Bare Sediment Samples Across Locations",
color = "Treatment"
) + theme(plot.title=element_text(hjust=0.5), panel.background = element_rect(fill = "ivory2"), text = element_text(family = "Times New Roman", size=12))
dnaconc
#+ scale_y_continuous(breaks = seq(from=0, to= 40, by= 5), labels = seq(from=0, to=40, by=5))
#axis.text.x = element_text(angle = 90, hjust = 1)
ggsave(filename = "DNAConcentrationNormalized.png", plot = dnaconc, width = 22, height = 13, dpi = 300, units = "cm")
dnaconc <- ggplot(data = sediment_data_new, mapping = aes(x = Location, y = Normalized.Values)) + geom_point(mapping = aes(color=Treatment, shape = Treatment), position = position_jitterdodge()) + scale_color_manual(values = c("lightskyblue2", "plum3")) + geom_boxplot(alpha = 0.3, mapping = aes(color=Treatment), outlier.shape =  NA)  + labs(
x = "Location",
y = "DNA Concentration (ng DNA / g sediment)",
title = "DNA Concentration in Oyster and Bare Sediment Samples Across Locations",
color = "Treatment"
) + theme(plot.title=element_text(hjust=0.5), panel.background = element_rect(fill = "ivory2"), text = element_text(family = "Times New Roman", size=12))
dnaconc
#+ scale_y_continuous(breaks = seq(from=0, to= 40, by= 5), labels = seq(from=0, to=40, by=5))
#axis.text.x = element_text(angle = 90, hjust = 1)
ggsave(filename = "DNAConcentrationNormalized.png", plot = dnaconc, width = 22, height = 14, dpi = 300, units = "cm")
dnaOB <- ggplot(data = sediment_data_new, mapping = aes(x = Treatment, y = Normalized.Values)) + geom_point(mapping = aes(color=Treatment, shape = Treatment), position = position_jitterdodge()) + scale_color_manual(values = c("lightskyblue2", "plum3")) + geom_boxplot(alpha = 0.3, mapping = aes(color=Treatment), outlier.shape = NA)  + labs(
x = "Sediment Type",
y = "DNA Concentration (ng/uL)",
title = "DNA Concentration Comparison Between Bare and Oyster Sediments",
color = "Treatment"
) + theme(plot.title=element_text(hjust=0.5), panel.background = element_rect(fill = "ivory2"), text = element_text(family = "Times New Roman", size=12))
dnaOB
#+ scale_y_continuous(breaks = seq(from=0, to= 40, by= 5), labels = seq(from=0, to=40, by=5))
#ggsave(filename = "DNAConcOB.png", plot = dnaOB, width = 20, height = 15, dpi = 300, units = "cm")
dnaOB <- ggplot(data = sediment_data_new, mapping = aes(x = Treatment, y = Normalized.Values)) + geom_point(mapping = aes(color=Treatment, shape = Treatment), position = position_jitterdodge()) + scale_color_manual(values = c("lightskyblue2", "plum3")) + geom_boxplot(alpha = 0.3, mapping = aes(color=Treatment), outlier.shape = NA)  + labs(
x = "Sediment Type",
y = "DNA Concentration (ng DNA / g sediment)",
title = "DNA Concentration Comparison Between Bare and Oyster Sediments",
color = "Treatment"
) + theme(plot.title=element_text(hjust=0.5), panel.background = element_rect(fill = "ivory2"), text = element_text(family = "Times New Roman", size=12))
dnaOB
#+ scale_y_continuous(breaks = seq(from=0, to= 40, by= 5), labels = seq(from=0, to=40, by=5))
#ggsave(filename = "DNAConcOB.png", plot = dnaOB, width = 20, height = 15, dpi = 300, units = "cm")
dnaOB <- ggplot(data = sediment_data_new, mapping = aes(x = Treatment, y = Normalized.Values)) + geom_point(mapping = aes(color=Treatment, shape = Treatment), position = position_jitterdodge()) + scale_color_manual(values = c("lightskyblue2", "plum3")) + geom_boxplot(alpha = 0.3, mapping = aes(color=Treatment), outlier.shape = NA)  + labs(
x = "Sediment Type",
y = "DNA Concentration (ng DNA / g sediment)",
title = "DNA Concentration Comparison Between Bare and Oyster Sediments",
color = "Treatment"
) + theme(plot.title=element_text(hjust=0.5), panel.background = element_rect(fill = "ivory2"), text = element_text(family = "Times New Roman", size=12))
dnaOB
#+ scale_y_continuous(breaks = seq(from=0, to= 40, by= 5), labels = seq(from=0, to=40, by=5))
#ggsave(filename = "DNAConcOB.Normalized.png", plot = dnaOB, width = 20, height = 15, dpi = 300, units = "cm")
dnaOB <- ggplot(data = sediment_data_new, mapping = aes(x = Treatment, y = Normalized.Values)) + geom_point(mapping = aes(color=Treatment, shape = Treatment), position = position_jitterdodge()) + scale_color_manual(values = c("lightskyblue2", "plum3")) + geom_boxplot(alpha = 0.3, mapping = aes(color=Treatment), outlier.shape = NA)  + labs(
x = "Sediment Type",
y = "DNA Concentration (ng DNA / g sediment)",
title = "DNA Concentration Comparison Between Bare and Oyster Sediments",
color = "Treatment"
) + theme(plot.title=element_text(hjust=0.5), panel.background = element_rect(fill = "ivory2"), text = element_text(family = "Times New Roman", size=12))
dnaOB
#+ scale_y_continuous(breaks = seq(from=0, to= 40, by= 5), labels = seq(from=0, to=40, by=5))
ggsave(filename = "DNAConcOB.Normalized.png", plot = dnaOB, width = 20, height = 15, dpi = 300, units = "cm")
OBlocations <- ggplot(data = sediment_data, mapping = aes(x = Location, y = DNA.Concentration.ng.uL)) + geom_point(mapping = aes(color=Treatment, shape = Treatment), position = position_jitterdodge()) + scale_color_manual(values = c("lightskyblue2", "plum3")) + scale_y_continuous(breaks = seq(from=0, to= 40, by= 5), labels = seq(from=0, to=40, by=5)) + labs(
x = "Location",
y = "DNA Concentration (ng/uL)",
title = "Figure",
color = "Treatment"
) + theme(plot.title=element_text(hjust=0.5), panel.background = element_rect(fill = "ivory2"), text = element_text(family = "Times New Roman", size=12))
OBlocations
OBplace <- ggplot(data = sediment_data, mapping = aes(x = Treatment, y = DNA.Concentration.ng.uL)) + geom_point(mapping = aes(color = Treatment, shape = Location), position = position_jitterdodge()) + scale_color_manual(values = c("lightskyblue2", "plum3")) + geom_boxplot(alpha = 0.3, mapping = aes(color=Treatment), outlier.shape = NA) + scale_y_continuous(breaks = seq(from=0, to= 40, by= 5), labels = seq(from=0, to=40, by=5)) + labs(
x = "Sediment Type",
y = "DNA Concentration (ng/uL)",
title = "Comparison Between Oyster and Bare Sediment DNA Conectration Across Locations",
color = "Treatment"
) + theme(plot.title=element_text(hjust=0.5), panel.background = element_rect(fill = "ivory2"), text = element_text(family = "Times New Roman", size=10))
OBplace
biomass <- ggplot(data = sediment_data_new, mapping = aes(x = Location, y = Normalized.Values)) + sediment_data_new %>% filter(Normalized.Values == "Town Pond")) + geom_point(mapping = aes(color=Treatment, shape = Treatment), position = position_jitterdodge()) + scale_color_manual(values = c("lightskyblue2", "plum3")) + geom_boxplot(alpha = 0.3, mapping = aes(color=Treatment), outlier.shape =  NA)  + labs(
biomass <- ggplot(data = sediment_data_new, mapping = aes(x = Location, y = Normalized.Values)) + sediment_data_new %>% filter(Normalized.Values == "Town Pond") + geom_point(mapping = aes(color=Treatment, shape = Treatment), position = position_jitterdodge()) + scale_color_manual(values = c("lightskyblue2", "plum3")) + geom_boxplot(alpha = 0.3, mapping = aes(color=Treatment), outlier.shape =  NA)  + labs(
x = "Location",
y = "DNA Concentration (ng DNA / g sediment)",
title = "DNA Concentration in Oyster and Bare Sediment Samples Across Locations",
color = "Treatment"
) + theme(plot.title=element_text(hjust=0.5), panel.background = element_rect(fill = "ivory2"), text = element_text(family = "Times New Roman", size=12))
biomass <- ggplot(data = sediment_data_new, mapping = aes(x = Location, y = Normalized.Values, filter(Normalized.Values == "Town Pond"))) + geom_point(mapping = aes(color=Treatment, shape = Treatment), position = position_jitterdodge()) + scale_color_manual(values = c("lightskyblue2", "plum3")) + geom_boxplot(alpha = 0.3, mapping = aes(color=Treatment), outlier.shape =  NA)  + labs(
x = "Location",
y = "DNA Concentration (ng DNA / g sediment)",
title = "DNA Concentration in Oyster and Bare Sediment Samples Across Locations",
color = "Treatment"
) + theme(plot.title=element_text(hjust=0.5), panel.background = element_rect(fill = "ivory2"), text = element_text(family = "Times New Roman", size=12))
biomass
biomass <- ggplot(data = sediment_data_new, mapping = aes(x = Location, y = Normalized.Values, filter("Town Pond"))) + geom_point(mapping = aes(color=Treatment, shape = Treatment), position = position_jitterdodge()) + scale_color_manual(values = c("lightskyblue2", "plum3")) + geom_boxplot(alpha = 0.3, mapping = aes(color=Treatment), outlier.shape =  NA)  + labs(
x = "Location",
y = "DNA Concentration (ng DNA / g sediment)",
title = "DNA Concentration in Oyster and Bare Sediment Samples Across Locations",
color = "Treatment"
) + theme(plot.title=element_text(hjust=0.5), panel.background = element_rect(fill = "ivory2"), text = element_text(family = "Times New Roman", size=12))
biomass
biomass <- ggplot(data = sediment_data_new, mapping = aes(x = Location, y = Normalized.Values)) + geom_point(mapping = aes(color=Treatment, shape = Treatment), position = position_jitterdodge()) + scale_color_manual(values = c("lightskyblue2", "plum3")) + geom_boxplot(alpha = 0.3, mapping = aes(color=Treatment), outlier.shape =  NA)  + labs(
x = "Location",
y = "DNA Concentration (ng DNA / g sediment)",
title = "DNA Concentration in Oyster and Bare Sediment Samples Across Locations (no TP)",
color = "Treatment"
) + theme(plot.title=element_text(hjust=0.5), panel.background = element_rect(fill = "ivory2"), text = element_text(family = "Times New Roman", size=12))
biomass
